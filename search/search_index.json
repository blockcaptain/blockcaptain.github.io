{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Fancy Landing Page. BlockCaptain is an open source tool for managing and monitoring data integrity systems on Linux.","title":"Home"},{"location":"blkcapt/cloud-backup/","text":"Cloud Backup Restic Azure Backblaze B2 Borg Borgbase","title":"Cloud Backup"},{"location":"blkcapt/cloud-backup/#cloud-backup","text":"","title":"Cloud Backup"},{"location":"blkcapt/cloud-backup/#restic","text":"","title":"Restic"},{"location":"blkcapt/cloud-backup/#azure","text":"","title":"Azure"},{"location":"blkcapt/cloud-backup/#backblaze-b2","text":"","title":"Backblaze B2"},{"location":"blkcapt/cloud-backup/#borg","text":"","title":"Borg"},{"location":"blkcapt/cloud-backup/#borgbase","text":"","title":"Borgbase"},{"location":"blkcapt/design/","text":"About the design. Principles Rigerously evaluate and mitigate failures modes which may lead to data loss. The probability of major data loss should be close to 0%. Every risk that can be reasonably mitigated should be: e.g. silent data corruption ( bitrot ), malicious data corruption, complete failure of 1, 2 or all physical disks, an unrecoverable data bug in the cloud backup tool, or forgetting to pay the bill on your cloud storage. Alternative Tools BlockCaptain has some intersecting functionality with the following tools. These tools are not full alternatives to BlockCaptain, nor is BlockCaptain a superset of these tools. Btrfs btrbk (Perl) - Snapshot management and send/receive snapshots. Btrfs Maintenance (Bash) - Automate btrfs filesystem maintenance. btrfs-sxbackup (Python) - Send/receive snapshots. buttermanager (Python) - Snapshot management and filesystem maintenance. Snapper (C++) - Snapshot management. ZFS There is no ZFS support in BlockCaptain today. The following tools support ZFS snapshot management. pyznap (Python) - ZFS Snapshot management and send/receive snapshots. Sanoid (Perl) - ZFS Snapshot management and send/receive snapshots. ZnapZend (Perl) - ZFS Snapshot management and send/receive snapshots. zrepl (Go) - ZFS Snapshot management and send/receive snapshots.","title":"Design"},{"location":"blkcapt/design/#principles","text":"Rigerously evaluate and mitigate failures modes which may lead to data loss. The probability of major data loss should be close to 0%. Every risk that can be reasonably mitigated should be: e.g. silent data corruption ( bitrot ), malicious data corruption, complete failure of 1, 2 or all physical disks, an unrecoverable data bug in the cloud backup tool, or forgetting to pay the bill on your cloud storage.","title":"Principles"},{"location":"blkcapt/design/#alternative-tools","text":"BlockCaptain has some intersecting functionality with the following tools. These tools are not full alternatives to BlockCaptain, nor is BlockCaptain a superset of these tools.","title":"Alternative Tools"},{"location":"blkcapt/design/#btrfs","text":"btrbk (Perl) - Snapshot management and send/receive snapshots. Btrfs Maintenance (Bash) - Automate btrfs filesystem maintenance. btrfs-sxbackup (Python) - Send/receive snapshots. buttermanager (Python) - Snapshot management and filesystem maintenance. Snapper (C++) - Snapshot management.","title":"Btrfs"},{"location":"blkcapt/design/#zfs","text":"There is no ZFS support in BlockCaptain today. The following tools support ZFS snapshot management. pyznap (Python) - ZFS Snapshot management and send/receive snapshots. Sanoid (Perl) - ZFS Snapshot management and send/receive snapshots. ZnapZend (Perl) - ZFS Snapshot management and send/receive snapshots. zrepl (Go) - ZFS Snapshot management and send/receive snapshots.","title":"ZFS"},{"location":"blkcapt/getting-started/","text":"Getting Started Make your custom ISO. Burn it. Install on hardware. Installation Create an ISO Make ISO. Install the ISO Plug ISO in and boot. Manual Storage Configuration Todo: requirements elements... i.e. btrfs on / Post-Installation Setup filesystems. Enable local backups. Enable cloud backups. Customizations.","title":"Getting started"},{"location":"blkcapt/getting-started/#getting-started","text":"Make your custom ISO. Burn it. Install on hardware.","title":"Getting Started"},{"location":"blkcapt/getting-started/#installation","text":"","title":"Installation"},{"location":"blkcapt/getting-started/#create-an-iso","text":"Make ISO.","title":"Create an ISO"},{"location":"blkcapt/getting-started/#install-the-iso","text":"Plug ISO in and boot.","title":"Install the ISO"},{"location":"blkcapt/getting-started/#manual-storage-configuration","text":"Todo: requirements elements... i.e. btrfs on /","title":"Manual Storage Configuration"},{"location":"blkcapt/getting-started/#post-installation","text":"Setup filesystems. Enable local backups. Enable cloud backups. Customizations.","title":"Post-Installation"},{"location":"blkcapt/monitoring/","text":"Monitoring Disk Integrity Telegraf stuff. Deadman's Switch Currently Healthchecks.io is supported. Service Billing Monitor Validate Azure, Backblaze B2, or Borgbase billing.","title":"Monitoring"},{"location":"blkcapt/monitoring/#monitoring","text":"","title":"Monitoring"},{"location":"blkcapt/monitoring/#disk-integrity","text":"Telegraf stuff.","title":"Disk Integrity"},{"location":"blkcapt/monitoring/#deadmans-switch","text":"Currently Healthchecks.io is supported.","title":"Deadman's Switch"},{"location":"blkcapt/monitoring/#service-billing-monitor","text":"Validate Azure, Backblaze B2, or Borgbase billing.","title":"Service Billing Monitor"},{"location":"blkcapt/recovery/","text":"Recovery Planning for recovery with BlockCaptain. File Modification or Deletion Identify changes with diffing btwen snapshots. Restore files from earlier snapshosts on data or backup disks. or Swap back to old snapshot. Data Filesystem Degraded Insert new disk. Btrfs replace. Backup Disk Failures Init new. Btrfs send/rcv from main to backup. Data Filesystem Failure Init new. Btrfs send/rcv from backup to main. Operating System Filesystem Failure Reinstall fresh. Run OS restore cmd. or.. restore full os backup from live media NAS Burst in to Flames Full Reinstall. Pull from cloud backups.","title":"Recovery"},{"location":"blkcapt/recovery/#recovery","text":"Planning for recovery with BlockCaptain.","title":"Recovery"},{"location":"blkcapt/recovery/#file-modification-or-deletion","text":"Identify changes with diffing btwen snapshots. Restore files from earlier snapshosts on data or backup disks. or Swap back to old snapshot.","title":"File Modification or Deletion"},{"location":"blkcapt/recovery/#data-filesystem-degraded","text":"Insert new disk. Btrfs replace.","title":"Data Filesystem Degraded"},{"location":"blkcapt/recovery/#backup-disk-failures","text":"Init new. Btrfs send/rcv from main to backup.","title":"Backup Disk Failures"},{"location":"blkcapt/recovery/#data-filesystem-failure","text":"Init new. Btrfs send/rcv from backup to main.","title":"Data Filesystem Failure"},{"location":"blkcapt/recovery/#operating-system-filesystem-failure","text":"Reinstall fresh. Run OS restore cmd. or.. restore full os backup from live media","title":"Operating System Filesystem Failure"},{"location":"blkcapt/recovery/#nas-burst-in-to-flames","text":"Full Reinstall. Pull from cloud backups.","title":"NAS Burst in to Flames"},{"location":"development/contributing/","text":"Contribute.","title":"Contributing"},{"location":"integration/nas/","text":"No integrations with NAS distributions exist yet. Alternative NAS Distributions NAS distributions without any supported integration follow: FreeNAS (Python/FreeBSD) ZFS Rockstor (Python/OpenSUSE) Btrfs OpenMediaVault (PHP/Python/Debian) Btrfs (or ZFS with plugin) Unraid (Proprietary) Unraid + XFS or Btrfs","title":"NAS Distributions"},{"location":"integration/nas/#alternative-nas-distributions","text":"NAS distributions without any supported integration follow: FreeNAS (Python/FreeBSD) ZFS Rockstor (Python/OpenSUSE) Btrfs OpenMediaVault (PHP/Python/Debian) Btrfs (or ZFS with plugin) Unraid (Proprietary) Unraid + XFS or Btrfs","title":"Alternative NAS Distributions"},{"location":"integration/ubuntu/","text":"Ubuntu provides an ideal foundation for a do-it-yourself NAS setup. Ubuntu LTS can run securely with low maintenance for many years. Ubuntu 20.04 will receive security updates via ESM until April 2030. ESM is available free for personal use or for a nominal fee for commerical use. Ubuntu also has kernel Livepatch Service to address security issues without reboots, also free for personal use. BlockCaptain NAS The BlockCaptain NAS Media Creator can be used to seed a Ubuntu-based NAS. The media can be pre-configured to fully install a system with no user interaction. ZSys In the future, when there is ZFS support, BlockCaptain will complement ZSys . LXD LXD on Ubuntu a good complement to application (OCI/Docker) containers. LXD runs system (LXD) containers and full virtual machines (QEMU). TODO backing up with blkcapt.","title":"Ubuntu"},{"location":"integration/ubuntu/#blockcaptain-nas","text":"The BlockCaptain NAS Media Creator can be used to seed a Ubuntu-based NAS. The media can be pre-configured to fully install a system with no user interaction.","title":"BlockCaptain NAS"},{"location":"integration/ubuntu/#zsys","text":"In the future, when there is ZFS support, BlockCaptain will complement ZSys .","title":"ZSys"},{"location":"integration/ubuntu/#lxd","text":"LXD on Ubuntu a good complement to application (OCI/Docker) containers. LXD runs system (LXD) containers and full virtual machines (QEMU). TODO backing up with blkcapt.","title":"LXD"}]}